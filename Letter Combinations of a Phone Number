class Solution {
public:
    
    void getCombination(vector<string>letters, vector<string>&ans, string temp, int index)
    {
        if(index == letters.size())
        {
            ans.push_back(temp);
            
            return;
        }
        
        for(int i = 0; i < letters[index].size(); i++)
        {
            temp.push_back(letters[index][i]);
            getCombination(letters, ans, temp, index+1);
            temp.pop_back();
        }
    }
    
    vector<string> letterCombinations(string digits) {
        vector<string> letters;
        
        if(digits.size() == 0)
            return {};
        
        for (int i = 0; i < digits.size(); i++)
        {
            if(digits[i] == '2')
                letters.push_back("abc");
            if(digits[i] == '3')
                letters.push_back("def");
            if(digits[i] == '4')
                letters.push_back("ghi");
            if(digits[i] == '5')
                letters.push_back("jkl");
            if(digits[i] == '6')
                letters.push_back("mno");
            if(digits[i] == '7')
                letters.push_back("pqrs");
            if(digits[i] == '8')
                letters.push_back("tuv");
            if(digits[i] == '9')
                letters.push_back("wxyz");
        }
        vector<string> ans;
        getCombination(letters, ans, "", 0);
        return ans;
        return {};
    }
};
