class Solution {
public:
    
    bool checkRow(vector<vector<char>>& board)
    {
        vector<int> count(10, 0);
        for (int row = 0; row < board.size(); row++)
        {
            for (int col = 0; col < board[row].size(); col++)
            {
                if(board[row][col] != '.')
                {
                    count[board[row][col] - '0']++;
                    if(count[board[row][col] - '0'] > 1)
                        return false;
                }
            }
            fill(count.begin(), count.end(), 0);
        }
        return true;
    }
    
    bool checkCol(vector<vector<char>>& board)
    {
        vector<int> count(10, 0);
        for (int col = 0; col < board.size(); col++)
        {
            for (int row = 0; row < board[col].size(); row++)
            {
                if(board[row][col] != '.')
                {
                    count[board[row][col] - '0']++;
                    if(count[board[row][col] - '0'] > 1)
                        return false;
                }
            }
            fill(count.begin(), count.end(), 0);
        }
        return true;
    }
    
    bool checkSq(vector<vector<char>>& board)
    {
        vector<int> count(10, 0);
        for (int row = 0; row < board.size(); row += 3)
        {
            for (int col = 0; col < board.size(); col += 3)
            {
                for(int x = row; x < row+3; x++)
                {
                    for(int y = col; y < col+3; y++)
                    {
                        if(board[x][y] != '.')
                        {
                            count[board[x][y] - '0']++;
                            if(count[board[x][y] - '0'] > 1)
                                return false;
                        }
                    }
                }
                fill(count.begin(), count.end(), 0);
            }
        }
        return true;
    }
    
    bool isValidSudoku(vector<vector<char>>& board) {
        bool ans;
        ans = checkRow(board);
        if(ans == false)
            return false;
        
        ans = checkCol(board);
        if(ans == false)
            return false;
        
        ans = checkSq(board);
        if(ans == false)
            return false;
        
        return true;
    }
};
