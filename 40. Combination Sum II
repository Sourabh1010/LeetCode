class Solution {
public:
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        vector<vector<int>> res;
        vector<int> combination;
        sort(candidates.begin(), candidates.end());
        combinationSum2(candidates, target, 0, res, combination);
        return res;
    }
    
private:
    void combinationSum2(vector<int>& candidates, int target, int begin, vector<vector<int>> &res, vector<int> &combination)
    {
        if(!target)
        {
            res.push_back(combination);
            return;
        }
        for(int i = begin; i < candidates.size() && target >= candidates[i]; i++)
        {
            if(i == begin || candidates[i] != candidates[i-1])
            {
                combination.push_back(candidates[i]);
                combinationSum2(candidates, target-candidates[i], i+1, res, combination);
                combination.pop_back();
            }
        } 
    }
};
