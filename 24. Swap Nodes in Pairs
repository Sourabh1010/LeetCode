/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
// Check weather the next K nodes are null or not, if NULL then return the list and if not then reverse them.
    ListNode* swapPairs(ListNode* head) {
        ListNode* curr = head, *nex = NULL, *prev = NULL;
        int count = 0;
        
        if(head == NULL || head -> next == NULL)
            return head;
        
        while(count < 2)
        {
            nex = curr -> next;
            curr -> next = prev;
            prev = curr;
            curr = nex;
            count++;
        }
        if(nex != NULL)
            head -> next = swapPairs(nex);
        return prev;
    }
};
